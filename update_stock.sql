-- Create stock table if it doesn't exist
CREATE TABLE IF NOT EXISTS stock (
  id BIGINT PRIMARY KEY DEFAULT 1,
  current_quantity INTEGER NOT NULL DEFAULT 0,
  max_quantity INTEGER NOT NULL DEFAULT 100,
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- Create orders table if it doesn't exist
CREATE TABLE IF NOT EXISTS orders (
  id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  order_number TEXT NOT NULL UNIQUE,
  customer_name TEXT NOT NULL,
  email TEXT NOT NULL,
  phone TEXT NOT NULL,
  quantity INTEGER NOT NULL,
  status TEXT NOT NULL DEFAULT 'pending',
  created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- Insert initial stock if not exists
INSERT INTO stock (id, current_quantity, max_quantity)
VALUES (1, 50, 100)
ON CONFLICT (id) DO NOTHING;

-- Create update stock function
CREATE OR REPLACE FUNCTION update_stock(new_quantity INTEGER)
RETURNS TABLE (id BIGINT, current_quantity INTEGER, max_quantity INTEGER, updated_at TIMESTAMPTZ)
LANGUAGE plpgsql
AS $$
BEGIN
  RETURN QUERY
  UPDATE stock
  SET 
    current_quantity = new_quantity,
    updated_at = CURRENT_TIMESTAMP
  WHERE id = 1
  RETURNING *;

  IF NOT FOUND THEN
    INSERT INTO stock (id, current_quantity, max_quantity)
    VALUES (1, new_quantity, 100)
    RETURNING *;
  END IF;
END;
$$;